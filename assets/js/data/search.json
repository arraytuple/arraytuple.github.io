[ { "title": "Regular Expressions", "url": "/posts/regex/", "categories": "text-processing", "tags": "regex", "date": "2022-08-22 00:00:00 +0000", "snippet": "Meta Chatracters. Matches any single character\\ Escapes one of the meta characters to treat it as a regular character[...] Matches a single character or a range that is contained within brackets. Order does not matter but without brackets order does matter+ Matches the preeceding element one or more times? Matches the preeceding element zero or one time* Matches the preeceding element zero or more times{m,n} Matches the preeceding element at least m and not more than n times^ Matches the beginning of a line or string$ Matches the end of a line or string[^...] Matches a single character or a range that is not contained within the brackets?:...|...\"Or\" operator() Matches an optional expressionA reasonable example : [^ ]+ matches everything except for a space one or more times as there is + [a-z]+ means anything between a and z one or more times . matches any character. see the wierd results of pattern1import re text = \"\"\" this is the email avaanish@iitk=com adddress ,njdcnjkd and there is example@nknxs.coim pimple@example.com \"\"\"# the dot matches any character not only one dot pattern1 = re.compile(\"[^ ]+@[^ ]+.[a-z]+\") # need to put a \\ before dot to make any meta char act like a dot pattern2 = re.compile(\"[^ ]+@[^ ]+\\.[a-z]+\")pattern3 = re.compile(\"[^ ]+@[^ ]+\\.com\") matches1 = pattern1.findall(text)matches2 = pattern2.findall(text)matches3 = pattern3.findall(text)print(matches1)print(matches2)print(matches3)Out : ['avaanish@iitk=com adddress', 'example@nknxs.coim pimple']['example@nknxs.coim', 'pimple@example.com']['pimple@example.com']Bracketstext = \"\"\" this is the email avaanish@iitk=com adddress avaanish@iitk.ciomm ,njdcnjkd and there is example@nknxs.com pimple@example.com mimmm@iitk.com mimmmx@iitk.com \"\"\"# inside square brackets , any match incomplete, regardless of order pattern4 = re.compile(\"[plepim]+@[^ ]+\\.com\") pattern5 = re.compile(\"pimple+@[^ ]+\\.com\") matches4 = pattern4.findall(text)matches5 = pattern5.findall(text)print(matches4)print(matches5)Out:['mple@nknxs.com', 'pimple@example.com', 'mimmm@iitk.com']['pimple@example.com']Extract IP addresses :content = \"\"\"912.131.120.111912.131.134.000912.131.129.129\"\"\"pattern = re.compile(\"[0-9]{3}\\.[0-9]{3}\\.12[0-9]{1}\\.[0-9]{3}\")matches = pattern.findall(content)print(matches)Out :['912.131.120.111', '912.131.129.129']Extract filenames with dates between 1st Nov - 20 Novfilenames = ['nov-20.txt', 'Nov-22.txt', 'Oct-17.txt', 'billy_Nov-13.txt', 'November-24.txt', 'Nov-12.txt', 'november-14.txt']pattern = re.compile(\"nov[a-z]*-(?:[1-9]|1[1-9]|20).txt\", re.IGNORECASE)matches = [filename for filename in filenames if pattern.findall(filename)]print(matches)Extract Urls from text ? Matches the preeceding element zero or one time * Matches the preeceding element zero or more times ?:...|... “Or” operator () matches an optional expressioncontent = \"\"\"http://google.comhttps://example.comhttp://www.wikipedia.comhttp://pythonhow.comhttps://python.org\"\"\"pattern = re.compile(\"https?://(?:www.)?[^ \\n]+\\.(?:com|org)\")matches = pattern.findall(content)print(matches)Out : ['http://google.com', 'https://example.com', 'http://www.wikipedia.com', 'http://pythonhow.com', 'https://python.org']" }, { "title": "All about files", "url": "/posts/files/", "categories": "Files", "tags": "files, flat files", "date": "2022-08-22 00:00:00 +0000", "snippet": "A csv file is just a flat file. There is common misconception where csv files are thought to be related to excel files. They do open with excel when they have csv as the suffix as they lead to better human readability that way. But they can be opened in a text editor like notepad also.Bottomline : a csv file is a text file where the values are comma separated. Infact when you read that file , you will get a single string as the output.with open(\"file.csv\" , \"r\") as file: content = file.read() Out : 'account_num,balance\\n12456,2000\\n56785,5000' refer to this: https://stackoverflow.com/questions/14620125/difference-between-a-csv-and-a-txt-fileto be continued …" }, { "title": "Linux Commands", "url": "/posts/linux-notes/", "categories": "linux", "tags": "linux commands", "date": "2022-08-19 14:00:00 +0000", "snippet": "The foray into the world of Machine Learning or Software Engineering in general should ideally begin with some understanding of the Linux Operating System (OS). If you are a Window’s or a Mac user, you would do yourself a great favour by either completely switching to Linux or go for dual boot where Windows and Liux can co-exist in the same machine.Why Linux? Will visit that later in some post, but suffice to say that it would save you countless hours while installing libraries, making your GPUs work, make docker experience smoother etc. to name a few. But like a good worker node, you just need to trust and install some Linux distribution ( preferably Ubuntu 20.04 0r 22.04 ) , open the terminal and practice some basic commands.… to be continued" } ]
